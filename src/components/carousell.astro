---

---

<div class="grid gap-4">
  <div class="flex gap-4 justify-center items-center">
    <button id="carousel-prev" class="text-5xl px-4 hover:scale-105">◀</button>
    <span>━━━</span>
    <button id="carousel-next" class="text-5xl px-4 hover:scale-105">▶</button>
  </div>

  <div
    id="carousel"
    class:list={[
      "relative overflow-x-auto [&::-webkit-scrollbar]:h-0 *:w-full flex gap-4 *:shrink-0",
      "snap-x snap-mandatory *:snap-center",
    ]}
  >
    <slot />
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", (): void => {
    const carousel = document.getElementById("carousel");
    if (!carousel) {
      console.error("Carousel element not found");
      return;
    }

    const prevBtn = document.getElementById(
      "carousel-prev"
    ) as HTMLButtonElement;
    const nextBtn = document.getElementById(
      "carousel-next"
    ) as HTMLButtonElement;

    if (!carousel || !prevBtn || !nextBtn) {
      return;
    }

    const children = carousel.querySelectorAll<HTMLElement>(
      ":scope > :not(style):not(script)"
    );

    let currentIndex: number = 0;

    const scrollToIndex = (index: number): void => {
      console.log(`Scrolling to index: ${index}`);
      if (index >= 0 && index < children.length) {
        children[index].scrollIntoView({
          behavior: "smooth",
          block: "nearest",
          inline: "center",
        });
        currentIndex = index;
      }
    };

    prevBtn.addEventListener("click", (): void => {
      const newIndex: number =
        currentIndex > 0 ? currentIndex - 1 : children.length - 1;
      scrollToIndex(newIndex);
    });

    nextBtn.addEventListener("click", (): void => {
      const newIndex: number =
        currentIndex < children.length - 1 ? currentIndex + 1 : 0;
      scrollToIndex(newIndex);
    });
  });
</script>
